{{- if eq .chezmoi.os "linux" }}
{{- if eq .chezmoi.osRelease.id "ubuntu" }}

# Run startup scripts

if test -f "{{ .directories.user_bin_dir }}/linux-startup.sh"
    "$HOME"/bin/linux-startup.sh
end

# Alias & Functions berdasarkan distribusi Linux
{{- if or (eq .chezmoi.osRelease.id "ubuntu") (eq .chezmoi.osRelease.id "debian") }}
    alias sag='sudo apt-get'
    function aup
        sudo apt update
        apt list --upgradable
    end
{{- else if eq .chezmoi.osRelease.id "fedora" }}
    alias sag='sudo dnf'
    function aup
        sudo dnf check-update
    end
{{- else if eq .chezmoi.osRelease.id "arch" }}
    alias sag='sudo pacman'
    function aup
        sudo pacman -Sy
    end
{{- else if or (eq .chezmoi.osRelease.id "opensuse") (eq .chezmoi.osRelease.id "opensuse-tumbleweed") }}
    alias sag='sudo zypper'
    function aup
        sudo zypper refresh
    end
{{- else if eq .chezmoi.osRelease.id "alpine" }}
    alias sag='sudo apk'
    function aup
        sudo apk update
    end
{{- else }}
    # Fallback jika distribusi tidak terdeteksi
    alias sag='echo "Package manager tidak didukung di skrip ini"'
    function aup
        echo "Fungsi aup tidak tersedia untuk distro ini."
    end
{{- end }}

alias ctl='systemctl'
alias reboot="sudo systemctl reboot"
alias sstop="sudo systemctl stop"
alias sstatus="sudo systemctl status"

# Start and then view status of service
function sstart
    sudo systemctl start $argv[1]
    sudo systemctl status $argv[1]
end

# Restart and then view status of service
function srestart
    sudo systemctl restart $argv[1]
    sudo systemctl status $argv[1]
end

# Journalctl aliases
alias logs='sudo journalctl -fu'
alias logs-all='sudo journalctl -u'

{{- end }}
{{- end }}
