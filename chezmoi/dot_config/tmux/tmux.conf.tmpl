# ████████╗███╗   ███╗██╗   ██╗██╗  ██╗
# ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝
#    ██║   ██╔████╔██║██║   ██║ ╚███╔╝
#    ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗
#    ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗
#    ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝
# Terminal multiplexer
# https://github.com/tmux/tmux
# https://man7.org/linux/man-pages/man1/tmux.1.html#top_of_page

# === KEYBINDINGS ===
# Use 'bind' as an alias for 'bind-key'

# -------------------------------------------------------------------
# Remap prefix key
# -------------------------------------------------------------------
unbind C-b
set -g prefix C-a
bind-key C-a send-prefix  # or: bind-key -T prefix C-a send-prefix

# -------------------------------------------------------------------
# Split window in the same working directory as the active pane
# -------------------------------------------------------------------
unbind %
bind | split-window -h -c '#{pane_current_path}'  # Horizontal split
# alternative: 'tmux split-window -h -c "$(tmux display -p "#{pane_current_path}")"'

unbind '"'
bind - split-window -v -c '#{pane_current_path}'  # Vertical split
# alternative: 'tmux split-window -v -c "$(tmux display -p "#{pane_current_path}")"'

# -------------------------------------------------------------------
# Close pane & window without confirmation prompt
# -------------------------------------------------------------------
unbind x
bind -N "Close pane without confirmation" -T prefix x kill-pane
# skips: "kill-pane 1? (y/n)" prompt

unbind &
bind -N "Close window without confirmation" -T prefix & kill-window

# -------------------------------------------------------------------
# Additional keybindings
# -------------------------------------------------------------------
# Reload tmux configuration
bind r source-file $HOME/.config/tmux/tmux.conf \; display-message "Config reloaded"

# Create new window in the same working directory as the active pane
bind c new-window -c '#{pane_current_path}'

unbind C-w # Unbind this because conflicting with zsh shell keybind which i prefer to use

unbind q # unbind 'display-pane' which the default is prefix + q
bind Q display-pane # rebinding 'display-pane' to Q

bind q last-pane # bind q to switch between last-pane

bind a last-window
bind A switch-client -l

# Pane navigation using hjkl (similar to Vim)
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# --- RUN A CLI TOOL e.g sesh,lazygit,bun ---
bind-key "o" run-shell "sesh connect \"$(
  sesh list --icons | fzf-tmux -p 80%,70% \
    --no-sort --ansi --border-label ' sesh ' --prompt '⚡  ' \
    --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-a:change-prompt(⚡  )+reload(sesh list --icons)' \
    --bind 'ctrl-t:change-prompt(🪟  )+reload(sesh list -t --icons)' \
    --bind 'ctrl-g:change-prompt(⚙️  )+reload(sesh list -c --icons)' \
    --bind 'ctrl-x:change-prompt(📁  )+reload(sesh list -z --icons)' \
    --bind 'ctrl-f:change-prompt(🔎  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(⚡  )+reload(sesh list --icons)' \
    --preview-window 'right:55%' \
    --preview 'sesh preview {}'
)\""
# bind -N "Control+g (root mode) lazygit" -T root C-g new-window -c "#{pane_current_path}" -n "🌳" "lazygit 2> /dev/null" # Lazygit
bind -N "Run last sessions" -T prefix L run-shell "sesh last || tmux display-message -d 1000 'Oops, no last sessions found'"
# bind -N "Control-d (root mode) lazydocker" -T prefix C-d new-window -c "#{pane_current_path}" -n "🐳" "lazydocker 2> /dev/null" # Lazydocker
bind -N "Run btop" -T root C-m new-window -c "#{pane_current_path}" -n "📈" "btop"
# bind -N "Run Yazi" -T root C-y new-window -c "#{pane_current_path}" -n "📁" "yazi"
# bind -N "Run a script" Y split-window -v -l 10 "sleep 2 && bun run $(jq -r '.scripts | keys[]' package.json | fzf)"
bind-key "K" display-popup -E -w 40% "sesh connect \"$(
 sesh list -i | gum filter --limit 1 --no-sort --fuzzy --placeholder 'Pick a sesh' --height 50 --prompt='⚡'
)\""


# --- Add capabilites to copy and paste in mode: copy-mode-vi ---
bind -T copy-mode-vi v send -X begin-selection
{{- if eq .chezmoi.os "darwin" }}
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
{{ else if and (eq .chezmoi.os "linux") (eq .chezmoi.osRelease.id "arch" ) }}
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "wl-copy"
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "wl-copy"
{{- end }}
bind P paste-buffer

# === BASIC SETTINGS ===
# 'set' alias for 'set-option' and 'setw' alias for 'set-window-option'

# set -g default-shell /opt/homebrew/bin/fish
set -g mode-keys vi # Use vim style key bindings in copy-mode
set -g detach-on-destroy off # don't exit from tmux when closing a session
set -g renumber-windows on   # renumber all windows when any window is closed
set -g base-index 1 # Set base index for windows
set -g pane-base-index 1 # Set base index for panes
set -g mouse on # Enable mouse support
set -g default-terminal "tmux-256color" # 'xterm-256color' is widely used by terminal emulator but you can change to 'tmux-256color' is specifically designed for tmux and is optimized for use within tmux sessions.
set -ga terminal-overrides ",xterm-256color:Tc"
set -g allow-rename off # Allow programs in the pane to change the window name a terminal escape sequence (\ek...\e\\).
set -gq allow-passthrough on
# set-option -g automatic-rename off # Control automatic window renaming.  When this setting enabled, tmux will rename the window automatically the format specified by automatic-rename-format.

# --- Define colour scheme --- #
# _tmux_white=colour15
# _tmux_black=colour232
# _tmux_red=colour1
# _tmux_purple=colour54
# _tmux_grey_l=colour145
# _tmux_grey_d=colour236
# _tmux_blue=colour5
# _tmux_blue_d=colour17
# ---------------------------- #

# --- Panes ---
# set -g pane-active-border-style "fg=$_tmux_blue"
# set -g message-style "fg=$_tmux_grey_l,bg=$_tmux_grey_d"
# set -g pane-border-style "fg=white"
# set -g display-panes-colour "black"
# set -g display-panes-active-colour "white"
#
# set -g pane-border-status "off"
# set -g pane-border-format "[#[fg=white]#{?pane_active,#[bold],} :#P: #T #[fg=default,nobold]]"
#
# # Auto hide pane-border-status line when only one pane is displayed (see tmux/tmux#566)
# set-hook -g 'after-new-session'  'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
# set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
# set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
# set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
# set-hook -g 'after-split-window' 'run-shell -b "if [ \#{window_panes} -gt 1 ]; then tmux set pane-border-status top; fi"'

# === PLUGINS ===
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-cpu'
# set -g @plugin 'tmux-plugins/tmux-battery'
# set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'
set -g @plugin 'b0o/tmux-autoreload'

# === UNUSED PLUGINS ===
# set -g @plugin 'omerxx/tmux-sessionx'
# set -g @plugin 'sainnhe/tmux-fzf'
# set -g @plugin 'navahas/tmux-grimoire' # https://github.com/navahas/tmux-grimoire
# set -g @plugin 'omerxx/tmux-floax' # Floating terminal window
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'tmux-plugins/tmux-net-speed'
# set -g @plugin 'kylepeeler/tmux-nightowl'

# === PLUGINS SETTINGS ===

# -> Custom config for tmux plugin 'omerxx/tmux-sessionx' <-
# I recommend using `o` if not already in use, for least key strokes when launching
# set -g @sessionx-bind 'o'

# -> Custom config for tmux plugin 'tmux-resurrect' and 'tmux-continuum' <-
# set -g @resurrect-processes 'lazygit'
# set -g @resurrect-processes-debug 'on' # Debugging resurrect
# set -g @continuum-restore 'on' # Auto restore when starting tmux without pressing <prefix>+<C+r>

# -> Custom config for tmux plugin 'catppuccin' <-
# set -g @catppuccin_flavor "mocha"
# set -g @catppuccin_window_status_style "rounded"
# # So when renaming a window, the renamed window name appears in the window's tab bar. This only relates to catppuccin's behavior
# set -g @catppuccin_window_default_text " #W"
# set -g @catppuccin_window_current_text " #W"
# set -g @catppuccin_window_text " #W"

# === STATUS BAR ===
# Status bar style 1 ===
set -g status-left " session: #[fg=yellow,bold]#S "
set -g status-left-length 50    # increase length (from 10)
set -g status-right "#[fg=white,nobold]#(gitmux -cfg $HOME/.config/tmux/gitmux.yml)"
set -g status-position top       # macOS / darwin style
set -g status-style 'bg=default' # transparent
set -g status-interval 1  # Refresh the status line every second

set -g window-status-format ' #[fg=gray]#I:#W'
set -g window-status-current-format ' #[fg=yellow]#I:#W'
# ==========

# Status bar style 2 ===
# set -g status on
# set -g status-position top
# set -g status-justify right
# set -g status-style "fg=#569CD6"
# set -g status-right " "
# set -g status-left-length 50
# set -g status-left " #[fg=#5A5A5A] session:#[fg=#DCDCAA,bg=default] #S"
# set -g window-status-format " #[fg=#5A5A5A,bg=default]#I: #[fg=#default,bg=#DCDCAA]#W"
# # [fg=#569CD6,bg=default]#[fg=#000000,bg=#569CD6]#I#[fg=#569CD6,bg=default]
# set -g window-status-current-format " #[fg=#DCDCAA,bg=default]#I: #[fg=#5A5A5A,bg=#default]#W"
# =========

# Status bar style 3 ===
# This only related to catppuccin theme
# set -g status-right-length 100
# set -g status-left-length 100
# set -g status-left ""
# set -g status-right "#{E:@catppuccin_status_application}"
# set -agF status-right "#{E:@catppuccin_status_cpu}"
# set -ag status-right "#{E:@catppuccin_status_session}"
# set -ag status-right "#{E:@catppuccin_status_uptime}"
# set -agF status-right "#{E:@catppuccin_status_battery}"


# Status bar style 4 === https://github.com/Sin-cy/dotfiles/blob/main/tmux/.config/tmux/tmux.conf
# Configure Catppuccin
# set -g @catppuccin_flavor "mocha"
# set -g @catppuccin_status_background "none"
# set -g @catppuccin_window_status_style "none"
# set -g @catppuccin_pane_status_enabled "off"
# set -g @catppuccin_pane_border_status "off"
#
# # Configure Online status
# set -g @online_icon "ok"
# set -g @offline_icon "nok"
#
# # status left look and feel
# set -g status-left-length 100
# set -g status-left ""
# set -ga status-left "#{?client_prefix,#{#[bg=#{@thm_red},fg=#{@thm_bg},bold]  #S },#{#[bg=#{@thm_bg},fg=#{@thm_green}]  #S }}"
# # set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_overlay_0},none]│"
# # set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_maroon}]  #{pane_current_command} "
# set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_overlay_0},none]│"
# set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_blue}]  #{=/-32/...:#{s|$USER|~|:#{b:pane_current_path}}} "
# set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_overlay_0},none]#{?window_zoomed_flag,│,}"
# set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_yellow}]#{?window_zoomed_flag,  zoom ,}"
#
# # status right look and feel
# set -g status-right-length 100
# set -g status-right ""
# set -ga status-right "#{?#{e|>=:10,#{battery_percentage}},#{#[bg=#{@thm_red},fg=#{@thm_bg}]},#{#[bg=#{@thm_bg},fg=#{@thm_pink}]}} #{battery_icon} #{battery_percentage} "
# set -ga status-right "#[bg=#{@thm_bg},fg=#{@thm_overlay_0}, none]│"
# set -ga status-right "#[bg=#{@thm_bg}]#{?#{==:#{online_status},ok},#[fg=#{@thm_mauve}] 󰖩 on ,#[fg=#{@thm_red},bold]#[reverse] 󰖪 off }"
# # set -ga status-right "#[bg=#{@thm_bg},fg=#{@thm_overlay_0}, none]│"
# # set -ga status-right "#[bg=#{@thm_bg},fg=#{@thm_blue}] 󰭦 %Y-%m-%d 󰅐 %H:%M "
#
#
# # Configure Tmux
# set -g status-position top
# set -g status-style "bg=#{@thm_bg}"
# set -g status-justify "absolute-centre"
#
# # pane border look and feel
# # setw -g pane-border-status top
# # setw -g pane-border-format ""
# # setw -g pane-active-border-style "bg=#{@thm_bg},fg=#{@thm_overlay_0}"
# # setw -g pane-border-style "bg=#{@thm_bg},fg=#{@thm_surface_0}"
# # setw -g pane-border-lines single
#
# # window look and feel
# set -wg automatic-rename on
# set -g automatic-rename-format "#{pane_current_command}"
#
# set -g window-status-format " #I#{?#{!=:#{window_name},Window},: #W,} "
# set -g window-status-style "bg=#{@thm_bg},fg=#{@thm_rosewater}"
# set -g window-status-last-style "bg=#{@thm_bg},fg=#{@thm_peach}"
# set -g window-status-activity-style "bg=#{@thm_red},fg=#{@thm_bg}"
# set -g window-status-bell-style "bg=#{@thm_red},fg=#{@thm_bg},bold"
# set -gF window-status-separator "#[bg=#{@thm_bg},fg=#{@thm_overlay_0}]│"
#
# set -g window-status-current-format " #I#{?#{!=:#{window_name},Window},: #W,} "
# set -g window-status-current-style "bg=#{@thm_peach},fg=#{@thm_bg},bold"
# ==========

# Load catppuccin
# run ~/.config/tmux/plugins/catppuccin/tmux/catppuccin.tmux
# For TPM, instead use `run ~/.config/tmux/plugins/tmux/catppuccin.tmux`

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
