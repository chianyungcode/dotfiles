{{ if and (eq .chezmoi.os "linux") (eq .chezmoi.osRelease.id "garuda" )}}
# shellcheck disable=SC2154,SC2298,SC2296

# Fungsi: Tampilkan semua warna 256 di terminal
colors() {
    for i in {0..255}; do
        printf "\e[48;5;%sm  \e[0m\e[38;5;%sm%03d\e[0m " "$i" "$i" "$i"
        (( i % 6 == 3 )) && echo
    done
}

# Fungsi: Tampilkan skema warna pribadi
mycolors() {
    printf "%s\n" "${underline} This is underlined text ${reset}"
    printf "%s\n" "${reverse} This is reversed text ${reset}"
    printf "%s\n" "${gray} This is gray text ${reset}"
    printf "%s\n" "${white} This is white text ${reset}"
    printf "%s\n" "${bold} This is bold text ${reset}"
    printf "%s\n" "${blue} This is blue text ${reset}"
    printf "%s\n" "${yellow} This is yellow text ${reset}"
    printf "%s\n" "${purple} This is purple text ${reset}"
    printf "%s\n" "${red} This is red text ${reset}"
    printf "%s\n" "${green} This is green text ${reset}"

    printf "%s\n" "${white}${reverse} This is white reversed text ${reset}"
    printf "%s\n" "${gray}${reverse} This is gray reversed text ${reset}"
    printf "%s\n" "${blue}${reverse} This is blue reversed text ${reset}"
    printf "%s\n" "${yellow}${reverse} This is yellow reversed text ${reset}"
    printf "%s\n" "${purple}${reverse} This is purple reversed text ${reset}"
    printf "%s\n" "${red}${reverse} This is red reversed text ${reset}"
    printf "%s\n" "${green}${reverse} This is green reversed text ${reset}"
}

# Aktifkan warna CLI
export CLICOLOR=1

# Warna `ls` (macOS pakai LSCOLORS, Linux pakai dircolors)
if [[ "$OSTYPE" == darwin* ]]; then
    export LSCOLORS="GxFxCxDxCxegedabagaced"
else
    # Gunakan default dircolors jika ada
    if command -v dircolors &>/dev/null; then
        eval "$(dircolors -b)"
    fi
fi

# Warna untuk `less` (man page)
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

# Set TERM untuk dukungan 256 warna
if [[ $COLORTERM == gnome-* && $TERM == xterm ]] && infocmp gnome-256color &>/dev/null; then
    export TERM=gnome-256color
else
    export TERM=xterm-256color
fi

# Fungsi: Inisialisasi warna
_setColors_() {
    if tput setaf 1 &>/dev/null; then
        bold=$(tput bold)
        underline=$(tput smul)
        reverse=$(tput rev)
        reset=$(tput sgr0)

        # Mapping warna default
        white_code=7 blue_code=4 yellow_code=3 green_code=2 red_code=1 purple_code=5 gray_code=7

        # Gunakan kode warna 256 jika tersedia
        if [[ $(tput colors 2>/dev/null) -ge 256 ]]; then
            white_code=231 blue_code=38 yellow_code=11 green_code=82 red_code=9 purple_code=171 gray_code=250
        fi

        # Set warna
        white=$(tput setaf "$white_code")
        blue=$(tput setaf "$blue_code")
        yellow=$(tput setaf "$yellow_code")
        green=$(tput setaf "$green_code")
        red=$(tput setaf "$red_code")
        purple=$(tput setaf "$purple_code")
        gray=$(tput setaf "$gray_code")
    else
        # Fallback escape ANSI manual
        bold="\033[1m"
        underline="\033[4m"
        reverse="\033[7m"
        reset="\033[0m"
        white="\033[37m"
        blue="\033[34m"
        yellow="\033[33m"
        green="\033[32m"
        red="\033[31m"
        purple="\033[35m"
        gray="\033[37m"
    fi
}

# Panggil inisialisasi warna
_setColors_

# Ekspor variabel warna
export bold underline reverse reset white blue yellow green red purple gray
{{- end }}
