{{- if eq .chezmoi.os "linux" }}
{{- if eq .chezmoi.osRelease.id "ubuntu" }}

# Run startup scripts

if [[ -f "{{ .directories.user_bin_dir }}/linux-startup.sh" ]]; then
    "${HOME}"/bin/linux-startup.sh
fi

# Alias & Functions berdasarkan distribusi Linux
{{- if or (eq .chezmoi.osRelease.id "ubuntu") (eq .chezmoi.osRelease.id "debian") }}
    alias sag='sudo apt-get'
    aup() {
        sudo apt update
        apt list --upgradable
    }
{{- else if eq .chezmoi.osRelease.id "fedora" }}
    alias sag='sudo dnf'
    aup() {
        sudo dnf check-update
    }
{{- else if eq .chezmoi.osRelease.id "arch" }}
    alias sag='sudo pacman'
    aup() {
        sudo pacman -Sy
    }
{{- else if or (eq .chezmoi.osRelease.id "opensuse") (eq .chezmoi.osRelease.id "opensuse-tumbleweed") }}
    alias sag='sudo zypper'
    aup() {
        sudo zypper refresh
    }
{{- else if eq .chezmoi.osRelease.id "alpine" }}
    alias sag='sudo apk'
    aup() {
        sudo apk update
    }
{{- else }}
    # Fallback jika distribusi tidak terdeteksi
    alias sag='echo "Package manager tidak didukung di skrip ini"'
    aup() {
        echo "Fungsi aup tidak tersedia untuk distro ini."
    }
{{- end }}

alias ctl='systemctl'
alias reboot="sudo systemctl reboot"
alias sstop="sudo systemctl stop"
alias sstatus="sudo systemctl status"

# Start and then view status of service
sstart() {
    sstart systemctl start "$1"
    sudo systemctl status "$1"
}

# Restart and then view status of service
srestart() {
    sudo systemctl restart "$1"
    sudo systemctl status "$1"
}

# Journalctl aliases
alias logs='sudo journalctl -fu'
alias logs-all='sudo journalctl -u'

{{- end }}
{{- end }}
