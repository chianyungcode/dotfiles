#!/usr/bin/env bash

# Set environment variables for non-interactive installation
export TERM=${TERM:-dumb}

# Source shared script utilities
{{ template "shared_script_utils.bash" . }}

header "Installing mise - Language version manager"

# Ensure ~/.local/bin is in PATH
export PATH="$HOME/.local/bin:$PATH"

# Install mise - Universal version manager
# Based on official installation: https://mise.jdx.dev/getting-started.html
if command -v mise >/dev/null 2>&1; then
    info "mise is already installed."
    MISE_VERSION=$(mise version 2>/dev/null | awk '{print $1}' || echo "unknown")
    info "Current mise version: $MISE_VERSION"
else
    info "Installing mise..."
    if curl -fsSL https://mise.run | sh; then
        success "mise installed successfully"

        # Ensure mise is available in current session
        if [[ -f "$HOME/.local/bin/mise" ]]; then
            export PATH="$HOME/.local/bin:$PATH"
        fi

        # Try to activate mise for current shell
        if [[ -n "$BASH_VERSION" ]]; then
            eval "$($HOME/.local/bin/mise activate bash 2>/dev/null || true)"
        elif [[ -n "$ZSH_VERSION" ]]; then
            eval "$($HOME/.local/bin/mise activate zsh 2>/dev/null || true)"
        fi
    else
        error "Failed to install mise"
        _safeExit_ 1
    fi
fi

# Verify mise is available
if ! command -v mise >/dev/null 2>&1; then
    error "mise command not found after installation"
    error "Please ensure ~/.local/bin is in your PATH"
    _safeExit_ 1
fi

# Install node, go, and rust with error handling
header "Installing Node.js, Go, Rust, Bun, Deno and Taplo via mise"

LANGUAGES=("node" "go" "rust" "bun" "deno" "taplo")
FAILED_INSTALLS=()

for lang in "${LANGUAGES[@]}"; do
    info "Installing $lang..."
    if mise use -g "$lang" 2>/dev/null; then
        success "$lang installed successfully"
    else
        error "Failed to install $lang"
        FAILED_INSTALLS+=("$lang")
    fi
done

# Report any failures
if [[ ${#FAILED_INSTALLS[@]} -gt 0 ]]; then
    error "Failed to install the following languages: ${FAILED_INSTALLS[*]}"
    info "You can try installing them manually with: mise use -g <language>"
fi

success "Language version manager setup completed"
_safeExit_ 0
